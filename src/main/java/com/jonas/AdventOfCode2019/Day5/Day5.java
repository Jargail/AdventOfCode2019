package com.jonas.AdventOfCode2019.Day5;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Day5 {
    public static int[] inp1 = {1002,4,3,4,33};
    public static int[] inp2 = {1101,100,-1,4,0};
    public static int[] inp3 = {3,1};
    public static int[] inp4 = {1002,4,3,4,33,4,4};
    public static int[] inp5 = {3,9,8,9,10,9,4,9,99,-1,8};
    public static int[] inp6 = {3,9,7,9,10,9,4,9,99,-1,8};
    public static int[] inp7 = {3,3,1108,-1,8,3,4,3,99};
    public static int[] inp8 = {3,3,1107,-1,8,3,4,3,99};

    public static int[] puzzle1 = {3,225,1,225,6,6,1100,1,238,225,104,0,1101,72,36,225,1101,87,26,225,2,144,13,224,101,-1872,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,66,61,225,1102,25,49,224,101,-1225,224,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,35,77,224,101,-112,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1002,195,30,224,1001,224,-2550,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1102,30,44,225,1102,24,21,225,1,170,117,224,101,-46,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1102,63,26,225,102,74,114,224,1001,224,-3256,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,58,22,225,101,13,17,224,101,-100,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1101,85,18,225,1001,44,7,224,101,-68,224,224,4,224,102,8,223,223,1001,224,5,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,226,224,102,2,223,223,1005,224,329,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,374,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,389,101,1,223,223,8,226,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,226,677,224,1002,223,2,223,1005,224,419,1001,223,1,223,107,677,677,224,102,2,223,223,1005,224,434,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1108,677,677,224,102,2,223,223,1006,224,464,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,524,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,108,226,677,224,1002,223,2,223,1005,224,554,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,569,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,584,101,1,223,223,1008,677,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,107,226,677,224,1002,223,2,223,1005,224,614,1001,223,1,223,1108,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,7,677,677,224,1002,223,2,223,1005,224,644,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,659,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226};
    public static int[] puzzle2 = {3,225,1,225,6,6,1100,1,238,225,104,0,1101,72,36,225,1101,87,26,225,2,144,13,224,101,-1872,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1102,66,61,225,1102,25,49,224,101,-1225,224,224,4,224,1002,223,8,223,1001,224,5,224,1,223,224,223,1101,35,77,224,101,-112,224,224,4,224,102,8,223,223,1001,224,2,224,1,223,224,223,1002,195,30,224,1001,224,-2550,224,4,224,1002,223,8,223,1001,224,1,224,1,224,223,223,1102,30,44,225,1102,24,21,225,1,170,117,224,101,-46,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1102,63,26,225,102,74,114,224,1001,224,-3256,224,4,224,102,8,223,223,1001,224,3,224,1,224,223,223,1101,58,22,225,101,13,17,224,101,-100,224,224,4,224,1002,223,8,223,101,6,224,224,1,224,223,223,1101,85,18,225,1001,44,7,224,101,-68,224,224,4,224,102,8,223,223,1001,224,5,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,7,677,226,224,102,2,223,223,1005,224,329,101,1,223,223,8,677,226,224,1002,223,2,223,1005,224,344,1001,223,1,223,1107,677,677,224,102,2,223,223,1005,224,359,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,374,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,389,101,1,223,223,8,226,677,224,1002,223,2,223,1005,224,404,101,1,223,223,1008,226,677,224,1002,223,2,223,1005,224,419,1001,223,1,223,107,677,677,224,102,2,223,223,1005,224,434,101,1,223,223,1108,677,226,224,1002,223,2,223,1006,224,449,101,1,223,223,1108,677,677,224,102,2,223,223,1006,224,464,101,1,223,223,1007,677,226,224,102,2,223,223,1006,224,479,101,1,223,223,1008,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,108,226,226,224,1002,223,2,223,1006,224,509,101,1,223,223,107,226,226,224,102,2,223,223,1006,224,524,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,539,1001,223,1,223,108,226,677,224,1002,223,2,223,1005,224,554,101,1,223,223,1007,226,226,224,102,2,223,223,1005,224,569,101,1,223,223,8,226,226,224,102,2,223,223,1006,224,584,101,1,223,223,1008,677,677,224,1002,223,2,223,1005,224,599,1001,223,1,223,107,226,677,224,1002,223,2,223,1005,224,614,1001,223,1,223,1108,226,677,224,102,2,223,223,1006,224,629,101,1,223,223,7,677,677,224,1002,223,2,223,1005,224,644,1001,223,1,223,108,677,677,224,102,2,223,223,1005,224,659,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,674,101,1,223,223,4,223,99,226};

    public void test(int instruction) {
        Instruction instr = new Instruction(instruction);
        System.out.println(instr.opcode + " " + instr.paramMode1 + " " + instr.paramMode2 + " " + instr.paramMode3);
    }

    public void computer(int[] input) {

        int instruction;
        int val1, val2, val3;
        int param1, param2, param3;

        Boolean cont = true;
        int i=0;
        while(i < input.length && cont) {
            instruction = input[i++];
            Instruction instr = new Instruction(instruction);

            switch (instr.opcode) {
                case 1:
                    param1 = input[i++];
                    param2 = input[i++];
                    param3 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    input[param3] = val1 + val2;
                    break;
                case 2:
                    param1 = input[i++];
                    param2 = input[i++];
                    param3 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    input[param3] = val1 * val2;
                    break;
                case 3:
                    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
                    param1 = input[i++];
                    try {
                        int cmdIn = Integer.parseInt(reader.readLine());
                        input[param1] = cmdIn;
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    break;
                case 4:
                    param1 = input[i++];
                    System.out.println(input[param1]);
                    break;
                case 5:
                    param1 = input[i++];
                    param2 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    if (val1 != 0)
                        i = val2;
                    break;
                case 6:
                    param1 = input[i++];
                    param2 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    if (val1 == 0)
                        i = val2;
                    break;
                case 7:
                    param1 = input[i++];
                    param2 = input[i++];
                    param3 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    if (val1 < val2)
                        input[param3] = 1;
                    else
                        input[param3] = 0;
                    break;
                case 8:
                    param1 = input[i++];
                    param2 = input[i++];
                    param3 = input[i++];
                    val1 = instr.paramMode1 == 0 ? input[param1] : param1;
                    val2 = instr.paramMode2 == 0 ? input[param2] : param2;
                    if (val1 == val2)
                        input[param3] = 1;
                    else
                        input[param3] = 0;
                    break;
                case 99:
                    cont = false;
                    break;
                default:
                    System.out.println("Faulty option");
                    cont = false;
                    break;
            }
        }
    }

    private class Instruction {
        int opcode;
        int paramMode1;
        int paramMode2;
        int paramMode3;

        public Instruction(int instruction) {
            opcode = instruction % 100;
            paramMode1 = instruction / 100 % 10;
            paramMode2 = instruction / 1000 % 10;
            paramMode3 = instruction / 10000 % 10;
        }
    }
}
